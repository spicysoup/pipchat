{"version":3,"sources":["components/messageEditor/MessageEditor.module.scss","components/peerList/PeerList.module.scss","components/messages/Messages.module.scss","components/messages/Message.module.scss","sagas/websocket.js","react-auth0-spa.js","auth_config.js","utils/history.js","utils/env.js","api/chatAPI.js","features/session/sessionSlice.js","features/navBar/NavBar.js","utils/helpers.js","utils/encryption.ts","features/chat/chatSlice.js","components/messageEditor/MessageEditor.js","components/peerList/Peer.js","components/peerList/PeerList.js","components/messages/Message.js","components/messages/Messages.js","App.js","features/counter/counterSlice.js","sagas/others.js","sagas/index.js","store.js","serviceWorker.js","index.js","features/navBar/NavBar.module.scss","App.module.scss","components/peerList/Peer.module.scss"],"names":["module","exports","socket","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","process","createBrowserHistory","baseURL","env","checkinWithServer","a","token","user","axios","post","headers","Authorization","data","slice","createSlice","name","initialState","peers","peer","keyPair","reducers","checkinStart","state","isLoading","checkinFailure","action","error","payload","checkinSuccess","wsConnected","choosePeer","receivePeerList","loginSuccess","saveKeyPair","receivedPublicKey","publicKey","peerToUpdate","find","p","id","actions","send","checkin","dispatch","toString","NavBar","isAuthenticated","loginWithRedirect","logout","getTokenSilently","useDispatch","useEffect","console","log","fetchData","then","f","Container","Row","className","styles","navBar","Col","xs","loginButton","Button","variant","onClick","encodeKey","encodeBase64","decodeUTF8","JSON","stringify","decodeKeyPair","encodedKeyPair","decoded","parse","encodeUTF8","decodeBase64","Uint8Array","Object","values","secretKey","decodeKey","key","encrypt","secretOrSharedKey","json","nonce","randomBytes","box","nonceLength","messageUint8","encrypted","after","fullMessage","length","set","decrypt","messageWithNonce","messageWithNonceAsUint8Array","message","decrypted","open","Error","base64DecryptedMessage","conversation","push","receive","self","fetchPeerPublicKey","session","fetchPublicKey","fetchKeys","sendPublicKey","getState","sub","request","receiveMessage","MessageEditor","useSelector","useState","text","setText","editor","value","onChange","onKeyDown","event","ctrlKey","preventDefault","encryptedMessage","sendMessage","readOnly","Peer","props","data-id","selected","ownPublicKey","exchangeKeys","PeerList","filter","peerList","map","Message","sender","messageContainer","dangerouslySetInnerHTML","__html","Messages","messages","chat","inputRef","useRef","current","scrollTop","scrollHeight","ref","m","i","App","loading","rootPane","messageEditor","increment","decrement","incrementByAmount","amount","watchInboundWSMessages","watchOutboundWSMessages","emit","initWebsocket","eventChannel","emitter","io","on","setTimeout","Math","random","close","call","channel","take","type","put","all","otherSideEffects","root","fork","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","thunk","configureStore","reducer","counter","counterReducer","sessionReducer","chatReducer","run","rootSaga","Boolean","hostname","match","ReactDOM","render","store","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","authenticated","getUser","authedUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenWithPopup","domain","config","client_id","redirect_uri","origin","audience","targetUrl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59b0d2da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"MessageEditor_editor__rBBL9\",\"ql-toolbar\":\"MessageEditor_ql-toolbar__2rD8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peerList\":\"PeerList_peerList__2B12B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3AdIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__1vERf\",\"message\":\"Message_message__2OMNI\",\"self\":\"Message_self__1Oacy\",\"peer\":\"Message_peer___pVeG\"};","import { eventChannel } from 'redux-saga';\nimport {\n  all, call, put, take,\n} from 'redux-saga/effects';\nimport io from 'socket.io-client';\nimport { baseURL } from 'utils/env';\nimport {\n  checkinSuccess,\n  choosePeer,\n  receivedPublicKey,\n  receivePeerList,\n  reCheckin,\n  wsConnected,\n} from 'features/session/sessionSlice';\nimport {\n  receive,\n  receiveMessage,\n  send,\n  sendPublicKey,\n} from 'features/chat/chatSlice';\n\nlet socket;\n\nconst sendMessage = ({\n  self, peer, message, request, publicKey, encryptedMessage,\n}) => {\n  if (encryptedMessage && message) {\n    // eslint-disable-next-line no-param-reassign\n    message = encryptedMessage;\n  }\n  socket.emit('chat/message', {\n    self, peer, message, request, publicKey, encrypted: !!encryptedMessage,\n  });\n};\n\nconst initWebsocket = () => eventChannel((emitter) => {\n  socket = io(baseURL(process.env.NODE_ENV));\n\n  socket.on('connect', () => {\n    emitter(wsConnected());\n  });\n\n  socket.on('connect', () => {\n    setTimeout(() => {\n      emitter(reCheckin());\n    }, Math.random() * 10000);\n  });\n\n  socket.on('welcome', (data) => {\n    if ('peers' in data) {\n      emitter(receivePeerList(data));\n    }\n  });\n\n  socket.on('chat/message', (data) => {\n    emitter(receive(data));\n  });\n\n  return () => {\n    socket.close();\n  };\n});\n\nexport function* watchInboundWSMessages() {\n  const channel = yield call(initWebsocket);\n  while (true) {\n    const action = yield take(channel);\n    switch (action.type) {\n      case receive.type: {\n        const { payload: { self: peer, request, publicKey } } = action;\n        if (request && publicKey) {\n          // Peer asking for public key\n          if (request === 'keyResponse') {\n            yield put(receivedPublicKey({ peer, publicKey }));\n          } else {\n            yield all([\n              put(receivedPublicKey({ peer, publicKey })),\n              put(sendPublicKey({ peer }))]);\n          }\n        } else {\n          // yield all([put(choosePeer(peer)), put(action)]);\n          yield all(\n            [put(choosePeer(peer)), put(receiveMessage(action.payload))],\n          );\n        }\n      }\n        break;\n      default: {\n        yield put(action);\n      }\n    }\n  }\n}\n\nexport function* watchOutboundWSMessages() {\n  while (true) {\n    const action = yield take([checkinSuccess, send]);\n\n    if (action.type === checkinSuccess.type) {\n      const { payload: { user } } = action;\n      yield call(sendMessage, { self: user.sub });\n    }\n\n    if (action.type === send.type) {\n      yield call(sendMessage, action.payload);\n    }\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useEffect, useState } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({},\n  document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes('code=')\n          && window.location.search.includes('state=')\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const authenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(authenticated);\n\n      if (authenticated) {\n        const authedUser = await auth0FromHook.getUser();\n        setUser(authedUser);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const authedUser = await auth0Client.getUser();\n    setUser(authedUser);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const authedUser = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(authedUser);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","export default {\n  domain: process.env.REACT_APP_AUTH0_DOMAIN,\n  clientId: process.env.REACT_APP_AUTH0_CLIENT_ID,\n  audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","/* eslint-disable import/prefer-default-export */\nexport const baseURL = (env) => (env === 'production'\n  ? 'https://pipchat.herokuapp.com'\n  : 'http://localhost:3001');\n","import axios from 'axios';\nimport { baseURL } from 'utils/env';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const checkinWithServer = async ({ token, user }) => {\n  const { data } = await axios.post(`${baseURL(process.env.NODE_ENV)}/api/checkin`,\n    { user },\n    {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n  return data;\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { checkinWithServer } from 'api/chatAPI';\n\nconst startLoading = (state) => {\n  state.isLoading = true;\n};\n\nconst loadingFailed = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nexport const slice = createSlice({\n  name: 'session',\n  initialState: {\n    peers: [],\n    peer: null,\n    user: null,\n    token: null,\n    keyPair: {},\n  },\n  reducers: {\n    checkinStart: startLoading,\n    checkinFailure: loadingFailed,\n    checkinSuccess(state, { payload }) {\n      state.peers = payload.peers;\n      state.isLoading = false;\n      state.user = payload.user;\n      state.token = payload.token;\n    },\n    wsConnected(state) {\n      state.wsConnected = true;\n    },\n    choosePeer(state, { payload }) {\n      state.peer = payload;\n    },\n    receivePeerList(state, { payload }) {\n      state.peers = payload.peers;\n\n      // We need to clear out the previously selected peer, because its corresponding\n      // public key would have been lost when we receive a new peer list.\n      state.peer = null;\n    },\n    // eslint-disable-next-line no-unused-vars\n    loginSuccess(state, { payload }) {\n      // This action doesn't need to mutate the state.\n      // It's just a signal to trigger the generation of key pairs.\n    },\n    saveKeyPair(state, { payload }) {\n      state.keyPair = payload.keyPair;\n    },\n    receivedPublicKey(state, { payload }) {\n      const { peer, publicKey } = payload;\n      const peerToUpdate = state.peers.find((p) => p.id === peer);\n      if (peerToUpdate) {\n        peerToUpdate.publicKey = publicKey;\n      }\n    },\n  },\n});\n\nexport const {\n  checkinStart, checkinFailure, checkinSuccess, wsConnected, choosePeer,\n  send, receivePeerList, loginSuccess, saveKeyPair, receivedPublicKey,\n} = slice.actions;\n\nexport const checkin = ({ token, user }) => async (dispatch) => {\n  try {\n    dispatch(checkinStart());\n    const data = await checkinWithServer({ token, user });\n    dispatch(checkinSuccess({ ...data, token, user }));\n  } catch (err) {\n    dispatch(checkinFailure(err.toString()));\n  }\n};\n\nexport const reCheckin = () => async (dispatch, getState) => {\n  const { session: { user, token } } = getState();\n  if (user && token) {\n    try {\n      dispatch(checkinStart());\n      const data = await checkinWithServer({ token, user });\n      dispatch(checkinSuccess({ ...data, user, token }));\n    } catch (err) {\n      dispatch(checkinFailure(err.toString()));\n    }\n  }\n};\n\nexport default slice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from 'features/navBar/NavBar.module.scss';\nimport {\n  Button, Col, Container, Row,\n} from 'react-bootstrap';\nimport { useAuth0 } from 'react-auth0-spa';\nimport { checkin, loginSuccess } from 'features/session/sessionSlice';\n\nconst NavBar = () => {\n  const {\n    isAuthenticated, loginWithRedirect, logout, getTokenSilently, user,\n  } = useAuth0();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    console.log('User', user);\n\n    async function fetchData() {\n      try {\n        const token = await getTokenSilently();\n        dispatch(checkin({ token, user }));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // We will generate key pairs upon successful logging in\n    dispatch(loginSuccess());\n\n    fetchData().then((f) => f);\n  }, [user]);\n  return (\n    <Container>\n      <Row className={`${styles.navBar} mx-auto`}>\n        <Col xs={2} />\n        <Col xs={8} className={styles.title}>Welcome to PipChat</Col>\n        <Col xs={2} className={`${styles.loginButton}`}>\n          {!isAuthenticated && (\n            <Button\n              variant=\"outline-info\"\n              onClick={() => loginWithRedirect({})}\n            >\n              Log in\n            </Button>\n          )}\n          {isAuthenticated\n            && (\n            <Button variant=\"outline-info\" onClick={() => logout()}>\n              Log out\n            </Button>\n            )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import {\n  decodeBase64,\n  decodeUTF8,\n  encodeBase64,\n  encodeUTF8,\n} from 'tweetnacl-util';\n\nexport const encodeKey = (keyPair) => encodeBase64(\n  decodeUTF8(JSON.stringify(keyPair)),\n);\n\nexport const decodeKeyPair = (encodedKeyPair) => {\n  const decoded = JSON.parse(encodeUTF8(decodeBase64(encodedKeyPair)));\n\n  decoded.publicKey = new Uint8Array(Object.values(decoded.publicKey));\n  decoded.secretKey = new Uint8Array(Object.values(decoded.secretKey));\n\n  return decoded;\n};\n\nexport const decodeKey = (key) => new Uint8Array(\n  Object.values(JSON.parse(encodeUTF8(decodeBase64(key)))),\n);\n","import { box, randomBytes } from 'tweetnacl';\nimport {\n  decodeUTF8,\n  encodeUTF8,\n  encodeBase64,\n  decodeBase64,\n} from 'tweetnacl-util';\n\nconst newNonce = () => randomBytes(box.nonceLength);\nexport const generateKeyPair = () => box.keyPair();\n\nexport const encrypt = (\n    secretOrSharedKey: Uint8Array,\n    json: any,\n    key?: Uint8Array\n) => {\n  const nonce = newNonce();\n  const messageUint8 = decodeUTF8(JSON.stringify(json));\n  const encrypted = key\n      ? box(messageUint8, nonce, key, secretOrSharedKey)\n      : box.after(messageUint8, nonce, secretOrSharedKey);\n\n  const fullMessage = new Uint8Array(nonce.length + encrypted.length);\n  fullMessage.set(nonce);\n  fullMessage.set(encrypted, nonce.length);\n\n  const base64FullMessage = encodeBase64(fullMessage);\n  return base64FullMessage;\n};\n\nexport const decrypt = (\n    secretOrSharedKey: Uint8Array,\n    messageWithNonce: string,\n    key?: Uint8Array\n) => {\n  const messageWithNonceAsUint8Array = decodeBase64(messageWithNonce);\n  const nonce = messageWithNonceAsUint8Array.slice(0, box.nonceLength);\n  const message = messageWithNonceAsUint8Array.slice(\n      box.nonceLength,\n      messageWithNonce.length\n  );\n\n  const decrypted = key\n      ? box.open(message, nonce, key, secretOrSharedKey)\n      : box.open.after(message, nonce, secretOrSharedKey);\n\n  if (!decrypted) {\n    throw new Error('Could not decrypt message');\n  }\n\n  const base64DecryptedMessage = encodeUTF8(decrypted);\n  return JSON.parse(base64DecryptedMessage);\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { decodeKey, decodeKeyPair, encodeKey } from 'utils/helpers';\nimport { decrypt, encrypt } from 'utils/encryption.ts';\n\nexport const slice = createSlice({\n  name: 'chat',\n  initialState: {\n    conversation: {},\n  },\n  reducers: {\n    send(state, { payload }) {\n      if (!('message' in payload)) {\n        return;\n      }\n      const { peer } = payload;\n      if (!(peer in state.conversation)) {\n        state.conversation[peer] = [];\n      }\n      state.conversation[peer].push(payload);\n    },\n    receive(state, { payload }) {\n      if (!('message' in payload)) {\n        return;\n      }\n      const { self: peer } = payload;\n      if (!(peer in state.conversation)) {\n        state.conversation[peer] = [];\n      }\n      state.conversation[peer].push(payload);\n    },\n  },\n});\n\n/**\n * Fetch peer's public key from the peer list.\n * Return undefined if not found.\n *\n * @param state\n * @param peer\n * @returns {*}\n */\nconst fetchPeerPublicKey = (state, peer) => {\n  const { session: { peers } } = state;\n  const { publicKey } = peers.find((p) => p.id === peer);\n\n  return publicKey;\n};\n\n/**\n * Fetch own public key.\n *\n * @param state\n * @param peer\n * @returns {*}\n */\nconst fetchPublicKey = (state) => {\n  const { session: { keyPair } } = state;\n  const { publicKey } = decodeKeyPair(keyPair);\n\n  return publicKey;\n};\n\n/**\n * Fetch own keys.\n *\n * @param state\n */\nconst fetchKeys = (state) => {\n  const { session: { keyPair } } = state;\n  const { publicKey, secretKey } = decodeKeyPair(keyPair);\n\n  return { publicKey, secretKey };\n};\n\nexport const {\n  send, receive,\n} = slice.actions;\n\n/**\n * Send own public key to peer upon request\n * @param peer\n * @returns {Function}\n */\nexport const sendPublicKey = ({ peer }) => async (dispatch, getState) => {\n  const { session: { user: { sub: self }, keyPair } } = getState();\n  const { publicKey } = decodeKeyPair(keyPair);\n\n  dispatch(send({\n    self, peer, publicKey: encodeKey(publicKey), request: 'keyResponse',\n  }));\n};\n\nexport const sendMessage = ({ self, peer, message }) => async (dispatch, getState) => {\n  const { secretKey } = fetchKeys(getState());\n  const publicKey = fetchPeerPublicKey(getState(), peer);\n\n  console.log('public key: ', publicKey);\n\n  const encryptedMessage = encrypt(secretKey, message, decodeKey(publicKey));\n  dispatch(send({\n    self, peer, message, encryptedMessage,\n  }));\n};\n\nexport const receiveMessage = ({ self, message, encrypted }) => async (dispatch, getState) => {\n  if (encrypted) {\n    const { secretKey } = fetchKeys(getState());\n    const publicKey = fetchPeerPublicKey(getState(), self);\n    message = decrypt(secretKey, message, decodeKey(publicKey));\n  }\n  dispatch(receive({ self, message }));\n};\n\nexport const exchangeKeys = ({ self, peer }) => async (dispatch, getState) => {\n  const publicKey = fetchPeerPublicKey(getState(), peer);\n  if (!publicKey) {\n    // Sending own public key along with the request for the peer's key\n    const ownPublicKey = fetchPublicKey(getState());\n    dispatch(send({\n      self, peer, request: 'keyRequest', publicKey: encodeKey(ownPublicKey),\n    }));\n  }\n};\n\nexport default slice.reducer;\n","import React, { useState } from 'react';\nimport { useAuth0 } from 'react-auth0-spa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { sendMessage } from 'features/chat/chatSlice';\nimport styles from './MessageEditor.module.scss';\nimport './MessageEditor.scss';\n\nconst MessageEditor = () => {\n  const { user } = useAuth0();\n  const peer = useSelector((state) => state.session.peer);\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n\n  const handleChange = (value) => setText(value);\n\n  const handleKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      if (event.ctrlKey) {\n        event.preventDefault();\n        dispatch(sendMessage({ self: user.sub, peer, message: text }));\n      }\n    }\n  };\n  return (\n    <ReactQuill\n      className={styles.editor}\n      value={text}\n      onChange={handleChange}\n      onKeyDown={handleKeyPressed}\n      readOnly={!peer}\n    />\n  );\n};\nexport default MessageEditor;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport styles from 'components/peerList/Peer.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { choosePeer } from 'features/session/sessionSlice';\nimport { exchangeKeys } from 'features/chat/chatSlice';\n\nconst Peer = (props) => {\n  const { name, id } = props;\n  const dispatch = useDispatch();\n  const peer = useSelector((state) => state.session.peer);\n  const self = useSelector((state) => state.session.user && state.session.user.sub);\n\n  const handlePeerClick = () => {\n    dispatch(choosePeer(id));\n    dispatch(exchangeKeys({ self, peer: id }));\n  };\n\n  return (\n    <div\n      data-id={id}\n      className={`${styles.peer} ${id === peer ? styles.selected : ''}`}\n      onClick={handlePeerClick}\n    >\n      {name}\n    </div>\n  );\n};\n\nPeer.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Peer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Peer from 'components/peerList/Peer';\nimport { useAuth0 } from 'react-auth0-spa';\nimport styles from 'components/peerList/PeerList.module.scss';\n\nconst PeerList = (props) => {\n  const { user } = useAuth0();\n\n  const peers = useSelector(\n    (state) => state.session.peers.filter((p) => p.id !== user.sub),\n  );\n\n  return (\n    <div className={styles.peerList}>\n      {peers.map((peer) => (\n        <Peer key={peer.id} name={peer.name} id={peer.id} />\n      ))}\n    </div>\n  );\n};\n\nPeerList.propTypes = {};\n\nexport default PeerList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport styles from './Message.module.scss';\n\nconst Message = (props) => {\n  const self = useSelector((state) => state.session.user && state.session.user.sub);\n  const { data: { self: sender, message } } = props;\n  const createMarkup = (text) => ({ __html: text });\n\n  return (\n    <div className={`${styles.messageContainer} ${self === sender\n      ? styles.self\n      : styles.peer}`}\n    >\n      <div\n        className={`${styles.message} ${self === sender\n          ? styles.self\n          : styles.peer}`}\n        dangerouslySetInnerHTML={createMarkup(message)}\n      />\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Message from 'components/messages/Message';\nimport styles from './Messages.module.scss';\n\nconst Messages = () => {\n  const peer = useSelector((state) => state.session.peer);\n  const messages = useSelector(\n    (state) => state.chat.conversation && state.chat.conversation[peer] || [],\n  );\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.scrollTop = inputRef.current.scrollHeight;\n  }, [messages]);\n\n  return (\n    <div className={styles.messages} ref={inputRef}>\n      {messages.map(\n        (m, i) => <Message key={`${peer}-${i}`} data={m} />,\n      )}\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport NavBar from 'features/navBar/NavBar';\nimport { useAuth0 } from 'react-auth0-spa';\nimport styles from 'App.module.scss';\nimport MessageEditor from 'components/messageEditor/MessageEditor';\nimport PeerList from 'components/peerList/PeerList';\nimport Messages from 'components/messages/Messages';\n\nconst App = () => {\n  const { loading, user } = useAuth0();\n  return (\n    <div>\n      <NavBar />\n      <Container className={styles.rootPane}>\n        {loading && <div>Loading...</div>}\n        {!loading\n          && (\n          <Row>\n            {/*<Col><p>User List</p></Col>*/}\n            <Col>{user && <PeerList />}</Col>\n            <Col xs={8}>\n              <Row className={styles.messages}>\n                <Messages />\n              </Row>\n              <Row className={styles.messageEditor}>\n                <MessageEditor />\n              </Row>\n            </Col>\n          </Row>\n          )}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to 'mutate' the state. It doesn't actually\n      // mutate the state because it uses the immer library, which detects\n      // changes to a \"draft state\" and produces a brand new immutable state\n      // based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload.amount;\n    },\n  },\n});\n\nexport const selectCount = (state) => state.counter.value;\nexport const { increment, decrement, incrementByAmount } = slice.actions;\n\nexport default slice.reducer;\n","import { put, take } from '@redux-saga/core/effects';\nimport { loginSuccess, saveKeyPair } from 'features/session/sessionSlice';\nimport { generateKeyPair } from 'utils/encryption.ts';\nimport { encodeKey } from 'utils/helpers';\n\nexport function* otherSideEffects() {\n  while (true) {\n    const action = yield take([loginSuccess]);\n\n    console.log('Login success. Generate key pair now.');\n\n    const keyPair = generateKeyPair();\n\n    const encodedKeyPair = encodeKey(keyPair);\n\n    yield put(saveKeyPair({ keyPair: encodedKeyPair }));\n  }\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport {\n  watchInboundWSMessages,\n  watchOutboundWSMessages,\n} from 'sagas/websocket';\n\nimport { otherSideEffects } from 'sagas/others';\n\nexport default function* root() {\n  yield all([\n    fork(watchInboundWSMessages),\n    fork(watchOutboundWSMessages),\n    fork(otherSideEffects),\n  ]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport counterReducer from 'features/counter/counterSlice';\nimport sessionReducer from 'features/session/sessionSlice';\nimport chatReducer from 'features/chat/chatSlice';\nimport rootSaga from 'sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [...getDefaultMiddleware({ thunk: true }), sagaMiddleware];\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    session: sessionReducer,\n    chat: chatReducer,\n  },\n  middleware,\n});\n\nsagaMiddleware.run(rootSaga);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Auth0Provider } from 'react-auth0-spa';\nimport config from 'auth_config';\nimport history from 'utils/history';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname,\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <Auth0Provider\n      domain={config.domain}\n      client_id={config.clientId}\n      redirect_uri={window.location.origin}\n      audience={config.audience}\n      onRedirectCallback={onRedirectCallback}\n    >\n      <App />\n    </Auth0Provider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__q71r5\",\"title\":\"NavBar_title__1BjYi\",\"loginButton\":\"NavBar_loginButton__28HF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootPane\":\"App_rootPane__3W_gX\",\"messages\":\"App_messages__2Pn3D\",\"messageEditor\":\"App_messageEditor__3bDhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peer\":\"Peer_peer__1k_jk\",\"selected\":\"Peer_selected__3jvM4\"};"],"sourceRoot":""}